
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.2
  creationTimestamp: null
  name: etcdpeers.etcd.improbable.io
spec:
  group: etcd.improbable.io
  names:
    kind: EtcdPeer
    listKind: EtcdPeerList
    plural: etcdpeers
    singular: etcdpeer
  scope: ""
  validation:
    openAPIV3Schema:
      description: EtcdPeer is the Schema for the etcdpeers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: EtcdPeerSpec defines the desired state of EtcdPeer
          properties:
            bootstrap:
              description: Bootstrap is the bootstrap configuration to pass down into
                the etcd pods. As per the etcd documentation, etcd will ignore bootstrap
                instructions if it already knows where it's peers are.
              properties:
                static:
                  description: Static boostrapping requires that we know the network
                    names of the other peers ahead of time.
                  properties:
                    initialCluster:
                      description: InitialCluster provides details of all initial
                        cluster members, and should include ourselves.
                      items:
                        description: InitialClusterMemeber describes a single member
                          of the initial cluster.
                        properties:
                          host:
                            description: Host forms part of the Advertise URL - the
                              URL at which this peer can be contacted. The port and
                              scheme are hardcoded to 2380 and http respectively.
                            type: string
                          name:
                            description: Name is a friendly name for the peer, used
                              as a means to identify the peer once it has joined a
                              cluster. This should match the `name` field of the `EtcdPeer`
                              resource representing that peer.
                            type: string
                        required:
                        - host
                        - name
                        type: object
                      minItems: 1
                      type: array
                  type: object
              type: object
            clusterName:
              description: The name of the etcd cluster that this peer should join.
                This will be used to set the `spec.subdomain` field and the `etcd.improbable.io/cluster-name`
                label on the Pod running etcd.
              maxLength: 64
              type: string
            storage:
              description: Storage is the configuration of the disks and mount points
                of the Etcd pod.
              properties:
                volumeClaimTemplate:
                  description: VolumeClaimTemplates is a claim that pods are allowed
                    to reference. The EtcdPeer controller will create a new PersistentVolumeClaim
                    using the StorageClass and the Storage Resource Request in this
                    template. That PVC will then be mounted in the Pod for this EtcdPeer
                    and the Etcd process when it starts will persist its data to the
                    PV bound to that PVC.
                  properties:
                    accessModes:
                      description: 'AccessModes contains the desired access modes
                        the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                      items:
                        type: string
                      type: array
                    dataSource:
                      description: This field requires the VolumeSnapshotDataSource
                        alpha feature gate to be enabled and currently VolumeSnapshot
                        is the only supported data source. If the provisioner can
                        support VolumeSnapshot data source, it will create a new volume
                        and data will be restored to the volume at the same time.
                        If the provisioner does not support VolumeSnapshot data source,
                        volume will not be created and the failure will be reported
                        as an event. In the future, we plan to support more data source
                        types and the behavior of the provisioner may change.
                      properties:
                        apiGroup:
                          description: APIGroup is the group for the resource being
                            referenced. If APIGroup is not specified, the specified
                            Kind must be in the core API group. For any other third-party
                            types, APIGroup is required.
                          type: string
                        kind:
                          description: Kind is the type of resource being referenced
                          type: string
                        name:
                          description: Name is the name of resource being referenced
                          type: string
                      required:
                      - kind
                      - name
                      type: object
                    resources:
                      description: 'Resources represents the minimum resources the
                        volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                      properties:
                        limits:
                          additionalProperties:
                            type: string
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties:
                            type: string
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                    selector:
                      description: A label query over volumes to consider for binding.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    storageClassName:
                      description: 'Name of the StorageClass required by the claim.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                      type: string
                    volumeMode:
                      description: volumeMode defines what type of volume is required
                        by the claim. Value of Filesystem is implied when not included
                        in claim spec. This is a beta feature.
                      type: string
                    volumeName:
                      description: VolumeName is the binding reference to the PersistentVolume
                        backing this claim.
                      type: string
                  type: object
              type: object
          required:
          - clusterName
          type: object
        status:
          description: EtcdPeerStatus defines the observed state of EtcdPeer
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
