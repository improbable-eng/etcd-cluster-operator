
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.2
  creationTimestamp: null
  name: etcdrestores.etcd.improbable.io
spec:
  group: etcd.improbable.io
  names:
    kind: EtcdRestore
    listKind: EtcdRestoreList
    plural: etcdrestores
    singular: etcdrestore
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: EtcdRestore is the Schema for the etcdrestores API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: EtcdRestoreSpec defines the desired state of EtcdRestore
          properties:
            clusterTemplate:
              description: ClusterTemplate describes the EtcdCluster that will eventually
                exist
              properties:
                clusterName:
                  description: ClusterName is the name of the EtcdCluster that will
                    be created by this operation.
                  type: string
                spec:
                  description: Spec is the specification of the cluster that will
                    be created by this operation
                  properties:
                    podTemplate:
                      description: PodTemplate describes metadata that should be applied
                        to the underlying Pods. This may not be applied verbatim,
                        as additional metadata may be added by the operator. In particular
                        the operator reserves label and annotation names starting
                        with `etcd.improbable.io`, and pod templates containing these
                        are considered invalid and will be rejected.
                      properties:
                        metadata:
                          description: Metadata is elements to be applied to the final
                            metadata of the underlying pods.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations are an unstructured string:string
                                map of annotations to be applied to the underlying
                                pods.
                              type: object
                          type: object
                      type: object
                    replicas:
                      description: Number of instances of etcd to assemble into this
                        cluster
                      format: int32
                      minimum: 1
                      type: integer
                    storage:
                      description: Storage is the configuration of the disks and mount
                        points of the Etcd peers.
                      properties:
                        volumeClaimTemplate:
                          description: VolumeClaimTemplates is a claim that pods are
                            allowed to reference. The EtcdPeer controller will create
                            a new PersistentVolumeClaim using the StorageClass and
                            the Storage Resource Request in this template. That PVC
                            will then be mounted in the Pod for this EtcdPeer and
                            the Etcd process when it starts will persist its data
                            to the PV bound to that PVC.
                          properties:
                            accessModes:
                              description: 'AccessModes contains the desired access
                                modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: This field requires the VolumeSnapshotDataSource
                                alpha feature gate to be enabled and currently VolumeSnapshot
                                is the only supported data source. If the provisioner
                                can support VolumeSnapshot data source, it will create
                                a new volume and data will be restored to the volume
                                at the same time. If the provisioner does not support
                                VolumeSnapshot data source, volume will not be created
                                and the failure will be reported as an event. In the
                                future, we plan to support more data source types
                                and the behavior of the provisioner may change.
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            resources:
                              description: 'Resources represents the minimum resources
                                the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                              properties:
                                limits:
                                  additionalProperties:
                                    type: string
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    type: string
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                              type: object
                            selector:
                              description: A label query over volumes to consider
                                for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            storageClassName:
                              description: 'Name of the StorageClass required by the
                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                              type: string
                            volumeMode:
                              description: volumeMode defines what type of volume
                                is required by the claim. Value of Filesystem is implied
                                when not included in claim spec. This is a beta feature.
                              type: string
                            volumeName:
                              description: VolumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                      type: object
                  required:
                  - replicas
                  type: object
              required:
              - clusterName
              - spec
              type: object
            source:
              description: Source describes the location the backup is pulled from
              properties:
                bucket:
                  description: Bucket identifies a generic blob Storage bucket to
                    pull the snapshot from.
                  properties:
                    bucketUrl:
                      description: BucketURL is the name of the storage bucket. This
                        is a go-cloud bucket URL https://gocloud.dev/howto/blob/ and
                        should use a URL scheme of the bucket provider. For example
                        `s3://my-amazon-bucket` or `gcs://my-google-cloud-bucket`.
                      maxLength: 222
                      minLength: 3
                      type: string
                    credentials:
                      description: Credentials holds the method of obtaining credentials
                        that will be provided to the Google Cloud APIs in order to
                        write backup data.
                      properties:
                        googleCloud:
                          description: Provide credentials for Google Cloud Platform.
                          properties:
                            secretKeySelector:
                              description: Credentials are taken from the key of a
                                Kubernetes secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    objectPath:
                      description: ObjectPath is the path to the object inside the
                        bucket.
                      minLength: 1
                      type: string
                  required:
                  - bucketUrl
                  - objectPath
                  type: object
              required:
              - bucket
              type: object
          required:
          - clusterTemplate
          - source
          type: object
        status:
          description: EtcdRestoreStatus defines the observed state of EtcdRestore
          properties:
            phase:
              description: Phase is what the restore is doing last time it was checked.
                The possible end states are "Failed" and "Completed".
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
