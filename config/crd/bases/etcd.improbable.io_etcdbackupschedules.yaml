
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: etcdbackupschedules.etcd.improbable.io
spec:
  group: etcd.improbable.io
  names:
    kind: EtcdBackupSchedule
    listKind: EtcdBackupScheduleList
    plural: etcdbackupschedules
    singular: etcdbackupschedule
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: EtcdBackupSchedule is the Schema for the etcdbackupschedules API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: EtcdBackupScheduleSpec defines the desired state of EtcdBackupSchedule
          properties:
            backupSpec:
              description: BackupTemplate describes the template used to create backup
                resources. Every time the schedule fires an `EtcdBackup' will be created
                with this template.
              properties:
                clusterEndpoints:
                  description: ClusterEndpoints holds one or more endpoints fronting
                    etcd's gRPC API. Multiple endpoints may only be supported by some
                    backup types.
                  items:
                    description: EtcdClusterEndpoint holds an addressable endpoint
                      for an etcd member.
                    properties:
                      host:
                        description: An IP address or DNS name of an endpoint.
                        type: string
                      port:
                        description: Port that is exposing the etcd client API for
                          this member.
                        type: integer
                      scheme:
                        description: Scheme to use for connecting to the host.
                        type: string
                    required:
                    - host
                    - port
                    - scheme
                    type: object
                  type: array
                destination:
                  description: Destination is the remote location where the backup
                    will be placed.
                  properties:
                    gcsBucket:
                      description: GCSBucket, when set, will push the backup to a
                        Google Cloud Storage bucket.
                      properties:
                        bucketName:
                          description: BucketName is the name of the storage bucket.
                          maxLength: 222
                          minLength: 3
                          type: string
                        credentials:
                          description: Credentials holds the method of obtaining credentials
                            that will be provided to the Google Cloud APIs in order
                            to write backup data.
                          properties:
                            secretKeySelector:
                              description: Credentials are taken from the key of a
                                Kubernetes secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - bucketName
                      type: object
                    local:
                      description: Local, when set, will copy the backup into a local
                        volume on the pod taking the backup.
                      properties:
                        path:
                          description: Directory is an absolute filepath to a directory
                            where backups will be placed.
                          type: string
                      required:
                      - path
                      type: object
                  type: object
              required:
              - clusterEndpoints
              - destination
              type: object
            schedule:
              description: Schedule holds a crontab-like scheule holding defining
                the schedule in which backups will be started.
              type: string
          required:
          - backupSpec
          - schedule
          type: object
        status:
          description: EtcdBackupScheduleStatus defines the observed state of EtcdBackupSchedule
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
