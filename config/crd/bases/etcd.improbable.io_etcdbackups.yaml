
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: etcdbackups.etcd.improbable.io
spec:
  group: etcd.improbable.io
  names:
    kind: EtcdBackup
    listKind: EtcdBackupList
    plural: etcdbackups
    singular: etcdbackup
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: EtcdBackup is the Schema for the etcdbackups API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: EtcdBackupSpec defines the desired state of EtcdBackup
          properties:
            destination:
              description: Destination is the remote location where the backup will
                be placed.
              properties:
                objectURLTemplate:
                  description: "ObjectURLTemplate is a URL of a file of a backup in
                    object storage. \n It *MAY* contain go-template style template
                    fields. The fields *MUST* match fields the EtcdBackup resource.
                    For example:  s3://example-bucket/snapshot.db  s3://example-bucket/{{
                    .Namespace }}/{{ .Name }}/{{ .CreationTimestamp }}/snapshot.db
                    \n You *SHOULD* include template fields if the URL will be used
                    in an EtcdBackupSchedule, to ensure that every backup has a unique
                    name. For example:  s3://example-bucket/snapshot-{{ .UID }}.db
                    \n The scheme of this URL should be gs:// or s3://."
                  type: string
              required:
              - objectURLTemplate
              type: object
            source:
              description: Source describes the cluster to be backed up.
              properties:
                clusterURL:
                  description: ClusterURL is a URL endpoint for a single Etcd server.
                    The etcd-cluster-operator backup-agent connects to this endpoint,
                    downloads a snapshot from remote etcd server and uploads the data
                    to EtcdBackup.Destination.ObjectURLTemplate. The Etcd Snapshot
                    API works with a single selected node, and the saved snapshot
                    is the point-in-time state of that selected node. See https://github.com/etcd-io/etcd/blob/v3.4.4/clientv3/snapshot/v3_snapshot.go#L53
                  type: string
              required:
              - clusterURL
              type: object
          required:
          - destination
          - source
          type: object
        status:
          description: EtcdBackupStatus defines the observed state of EtcdBackup
          properties:
            completionTime:
              description: CompletionTime is the time that this backup entered the
                `Completed' phase.
              format: date-time
              type: string
            phase:
              description: Phase defines the current operation that the backup process
                is taking.
              type: string
            startTime:
              description: StartTime is the times that this backup entered the `BackingUp'
                phase.
              format: date-time
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
